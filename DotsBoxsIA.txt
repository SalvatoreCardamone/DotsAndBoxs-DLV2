%ENTITA INPUT
%linea(START_X,START_Y,END_X,END_Y, TIME). 
% -Time risulta old su linee gia esistenti, new su possibili nuove linee
%punto(COORD_X,COORD_Y).
%%%punteggio(SCORE).


punto(0..2,0..2).

%GUESS
%DATI 2 PUNTI, DECIDO SE INSERIRE OPPURE NO UNA LINEA
linea(START_X,START_Y,END_X,END_Y, new) | nonlinea(START_X,START_Y,END_X,END_Y, new) :- punto(START_X,START_Y), punto(END_X,END_Y).

%CHECK 
%UNA LINEA NON PUO ESSERE FORMATA DALLO STESSO PUNTO
:-linea(START_X,START_Y,END_X,END_Y, new), START_X = END_X, START_Y = END_Y.


%SE INSERISCO UNA LINEA, AVRA ENTRAMBE  LE COORDINATE COME PARTENZA E ARRIVO
linea(START_X,START_Y,END_X,END_Y, TIME) :- linea(END_X,END_Y,START_X,START_Y, TIME).

%AD OGNI TURNO DEVO INSERIRE 1 LINEA
:- #count { new : linea(_,_,_,_,new) } < 1.
:- #count { new : linea(_,_,_,_,new) } > 2.

%NON POSSO INSERIRE UNA LINEA SOPRA UNA GIA ESISTENTE
:- linea(START_X,START_Y,END_X,END_Y, new), linea(END_X,END_Y,START_X,START_Y, "old").
:- linea(START_X,START_Y,END_X,END_Y, new), linea(START_X,START_Y,END_X,END_Y, "old").

%UNA LINEA NON PUO ESSERE TRA 2 PUNTI NON VICINI 

:- linea(START_X,START_Y,END_X,END_Y, TIME), START_X!=END_X, START_Y!=END_Y.
:- linea(START_X,START_Y,END_X,END_Y, TIME), START_X = END_X, START_Y - END_Y != 1, START_Y- END_Y!=-1.
:- linea(START_X,START_Y,END_X,END_Y, TIME), START_Y = END_Y, START_X - END_X != 1, START_X - END_X!=-1.

%WEAK CONSTRAINT
%E PREFERIBILE CHIUDERE UN QUADRATO CON UNA LINEA, SE POSSIBILE 
OldSquareOpen(A1,A2,A3,A4,B3,B4,C3,C4,old):-linea(A1,A2,A3,A4,"old"), linea(A1,A2,B3,B4,"old"), linea(A3,A4,C3,C4,"old"), not linea(B3,B4,C3,C4,"old"), C3-B3 <= 1, C4-B4 <=1.
:~N=#count{A1,A2,A3,A4,B3,B4,C3,C4,old: OldSquareOpen(A1,A2,A3,A4,B3,B4,C3,C4,old)}.[N@1]


%E PREFERIBILE NON CREARE UN QUADRATO CON UN LATO APERTO CON LA PROSSIMA LINEA 
%:~

%ESISTE UN PUNTO IN COMUNE

